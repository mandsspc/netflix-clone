[{"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/App.js":"1","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/movie.js":"2","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/data/movies.js":"3","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/index.js":"4","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/data/shows.js":"5","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/index.js":"6","/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/show.js":"7"},{"size":3489,"mtime":1607717176355,"results":"8","hashOfConfig":"9"},{"size":2636,"mtime":1607714977498,"results":"10","hashOfConfig":"9"},{"size":13969,"mtime":1607112093239,"results":"11","hashOfConfig":"9"},{"size":866,"mtime":1607112093239,"results":"12","hashOfConfig":"9"},{"size":13929,"mtime":1607112093239,"results":"13","hashOfConfig":"9"},{"size":604,"mtime":1607701846390,"results":"14","hashOfConfig":"9"},{"size":2549,"mtime":1607714974576,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"ony2vd",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/App.js",["34","35","36"],"// Libs\nimport React, { Component } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport logo from './assets/logo.png'\n\nconst List = styled.ul `\n  width: 40%;\n  display: flex;\n  justify-content: space-between;\n  margin-left: 14rem;\n  margin-top: 10px;\n\n  @media (max-width: 1024px) {\n    margin-left: 9rem;\n  }\n\n  @media (max-width: 768px) {\n    margin-left: 6rem;\n    margin-top: 5px;\n  }\n\n  @media (max-width: 425px) {\n    width: 56%; \n    margin-left: 2rem;\n    margin-top: 2px;\n  }\n`;\n\nconst ItemList = styled(NavLink) `\n  color: ghostwhite;\n  font-family: \"Playfair Display\", serif;\n  font-size: 22px;\n  text-shadow: 0.1em 0.1em 0.1em black;\n  text-decoration: none;\n  list-style: none;\n  cursor: pointer;\n\n  @media (max-width: 425px) {\n    font-size: 15px;\n  }\n`;\n\nclass App extends Component {\n    state = {\n      listMovie: [],\n      listShows: [],\n    };\n\ncomponentDidMount() {\n  this.getMovie()\n  this.getShows()\n}\n\ngetMovie = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_API}/movies`);\n    \n    this.setState({\n      listMovie: response.data\n    })\n\n  } catch (erro) {\n  }\n}\n\ngetShows = async () => {\n  try {\n    const response1 = await axios.get(`${process.env.REACT_APP_API}/shows`);\n\n    this.setState({\n      listShows: response1.data\n    })\n\n  } catch (erro) {\n  }\n};\n\n  render() {\n  const { listMovie } = this.state;\n  const { listShows } = this.state;\n\n    return (\n      <div>\n          <div className=\"box-init\">\n          <img src={logo} className=\"logo\" />\n            <List>\n              <ItemList\n                to={{\n                  pathname: '/'\n                }}\n              >\n               Inicio\n              </ItemList>\n              <ItemList\n              to={{\n                pathname: '/movie'\n              }}\n              >\n                Filmes\n              </ItemList>\n              <ItemList\n              to={{\n                pathname: '/show'\n              }}\n              >\n                Séries\n              </ItemList>\n            </List>\n          </div>\n          <div className=\"box-movie-and-shows\">\n            {listMovie.map((item, index) =>(\n              <div key={index} className=\"box-title-movie-and-shows\">\n                  <h2 className=\"title-movie-and-shows\">{item.title}</h2>\n                <div className=\"box-item-movie-and-shows\">\n                  <img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/>\n                    <p className=\"description-movie-and-shows\">{item.overview}</p>\n                </div>\n                <p className=\"date-movie-and-shows\">{item.release_date}</p>\n              </div>\n            ))}\n          </div>\n          <div className=\"box-movie-and-shows\">\n            {listShows.map((item, index) => (\n              <div key={index} className=\"box-title-movie-and-shows\">\n                  <h2 className=\"title-movie-and-shows\">{item.name}</h2>\n                <div className=\"box-item-movie-and-shows\">\n                <img className=\"netflixImages\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}/> \n                    <p className=\"description-movie-and-shows\">{item.overview}</p>\n                </div>\n                <p className=\"date-movie-and-shows\">{item.popularity}</p>\n              </div>   \n            ))}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["37","38"],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/movie.js",["39","40"],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/data/movies.js",[],["41","42"],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/index.js",[],["43","44"],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/server/data/shows.js",[],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/index.js",[],"/home/vainaweb08/Área de Trabalho/Projeto Final/netflix-clone/src/show.js",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":88,"column":11,"nodeType":"49","endLine":88,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":118,"column":19,"nodeType":"49","endLine":118,"endColumn":110},{"ruleId":"47","severity":1,"message":"48","line":130,"column":17,"nodeType":"49","endLine":130,"endColumn":108},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"47","severity":1,"message":"48","line":55,"column":17,"nodeType":"49","endLine":55,"endColumn":52},{"ruleId":"47","severity":1,"message":"48","line":85,"column":25,"nodeType":"49","endLine":85,"endColumn":116},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"50","replacedBy":"56"},{"ruleId":"52","replacedBy":"57"},{"ruleId":"47","severity":1,"message":"48","line":55,"column":15,"nodeType":"49","endLine":55,"endColumn":50},{"ruleId":"47","severity":1,"message":"48","line":85,"column":21,"nodeType":"49","endLine":85,"endColumn":112},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],["58"],["59"],"no-global-assign","no-unsafe-negation"]